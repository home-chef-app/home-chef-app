service: home-chef-api-v1

custom:
  vars: ${file(./config/dev/vars.yml)}

provider:
  name: aws
  runtime: nodejs14.x
  timeout: 30
  stage: ${self:custom.vars.env}
  version: ${opt:version, 'v1'}
  environment:
    NODE_ENV: ${self:custom.vars.env}
    DB_NAME: ${self:custom.vars.parameters.db_name}
    DB_USERNAME: ${ssm:/home-chef/dev/db-username}
    DB_PASSWORD: ${ssm:/home-chef/dev/db-password}
    DB_HOST: ${self:custom.vars.parameters.db_host}
    COGNITO_USER_POOL: ${self:custom.vars.cognito.cognito_user_pool_id}
    COGNITO_USER_POOL_CLIENT: ${self:custom.vars.cognito.cognito_user_pool_client_id}

  vpc:
    securityGroupIds:
      - ${self:custom.vars.vpc.vpc_id}
    subnetIds:
      - ${self:custom.vars.vpc.private_1_id}
      - ${self:custom.vars.vpc.private_2_id}

functions:
  listUsers:
    handler: handlers/${self:provider.version}/index.listUsers
    events:
      - http:
          path: /${self:provider.version}/users
          method: get
          cors: true
  fetchUser:
    handler: handlers/${self:provider.version}/index.fetchOne
    events:
      - http:
          path: /${self:provider.version}/users/{sub}
          method: get
          cors: true
  signIn:
    handler: handlers/${self:provider.version}/index.signIn
    events:
      - http:
          path: /${self:provider.version}/users/signin
          method: post
          cors: true
  signUp:
    handler: handlers/${self:provider.version}/index.signUp
    events:
      - http:
          path: /${self:provider.version}/users/signup
          method: post
          cors: true
  confirm:
    handler: handlers/${self:provider.version}/index.confirm
    events:
      - http:
          path: /${self:provider.version}/users/confirm
          method: post
          cors: true
  resend:
    handler: handlers/${self:provider.version}/index.resend
    events:
      - http:
          path: /${self:provider.version}/users/resend
          method: post
          cors: true
  refreshIdToken:
    handler: handlers/${self:provider.version}/index.refreshIdToken
    events:
      - http:
          path: /${self:provider.version}/users/refreshIdToken
          method: put
          cors: true
  tokenTest:
    handler: handlers/${self:provider.version}/index.tokenTest
    events:
      - http:
          path: /${self:provider.version}/tokenTest
          method: get
          cors: true

plugins:
  - serverless-offline
